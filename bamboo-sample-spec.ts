import com.atlassian.bamboo.specs.api.BambooSpec;
import com.atlassian.bamboo.specs.api.builders.AtlassianModule;
import com.atlassian.bamboo.specs.api.builders.BambooKey;
import com.atlassian.bamboo.specs.api.builders.BambooOid;
import com.atlassian.bamboo.specs.api.builders.Variable;
import com.atlassian.bamboo.specs.api.builders.notification.Notification;
import com.atlassian.bamboo.specs.api.builders.permission.PermissionType;
import com.atlassian.bamboo.specs.api.builders.permission.Permissions;
import com.atlassian.bamboo.specs.api.builders.permission.PlanPermissions;
import com.atlassian.bamboo.specs.api.builders.plan.Job;
import com.atlassian.bamboo.specs.api.builders.plan.Plan;
import com.atlassian.bamboo.specs.api.builders.plan.PlanIdentifier;
import com.atlassian.bamboo.specs.api.builders.plan.Stage;
import com.atlassian.bamboo.specs.api.builders.plan.artifact.Artifact;
import com.atlassian.bamboo.specs.api.builders.plan.artifact.ArtifactSubscription;
import com.atlassian.bamboo.specs.api.builders.plan.branches.BranchCleanup;
import com.atlassian.bamboo.specs.api.builders.plan.branches.PlanBranchManagement;
import com.atlassian.bamboo.specs.api.builders.plan.configuration.ConcurrentBuilds;
import com.atlassian.bamboo.specs.api.builders.project.Project;
import com.atlassian.bamboo.specs.api.builders.repository.VcsRepositoryIdentifier;
import com.atlassian.bamboo.specs.api.builders.requirement.Requirement;
import com.atlassian.bamboo.specs.api.builders.task.AnyTask;
import com.atlassian.bamboo.specs.builders.notification.CommittersRecipient;
import com.atlassian.bamboo.specs.builders.notification.PlanCompletedNotification;
import com.atlassian.bamboo.specs.builders.task.CheckoutItem;
import com.atlassian.bamboo.specs.builders.task.MsBuildTask;
import com.atlassian.bamboo.specs.builders.task.VcsCheckoutTask;
import com.atlassian.bamboo.specs.util.BambooServer;
import com.atlassian.bamboo.specs.util.MapBuilder;

@BambooSpec
public class PlanSpec {
    
    public Plan plan() {
        final Plan plan = new Plan(new Project()
                .oid(new BambooOid("4sra3e948lqe"))
                .key(new BambooKey("NMVPG"))
                .name("in-payment-gateway"),
            "in-pg-refund",
            new BambooKey("INPGRR"))
            .oid(new BambooOid("4shkvsvwf9yw"))
            .pluginConfigurations(new ConcurrentBuilds()
                    .useSystemWideDefault(false))
            .stages(new Stage("Fetch Third Party DLL(s)")
                    .description("Fetch Third Party DLL(s) from Git Repo")
                    .jobs(new Job("Fetch All Third Party DLLS",
                            new BambooKey("FATPD"))
                            .artifacts(new Artifact()
                                    .name("Transerv DLL")
                                    .copyPattern("*.dll")
                                    .location("in-ticketing-transerv/")
                                    .shared(true),
                                new Artifact()
                                    .name("TP DLL(s)")
                                    .copyPattern("*.dll")
                                    .location("in-tp-dlls/")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch Third Party DLL(s)")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-TP-dlls"))
                                            .path(".\\in-tp-dlls"))
                                    .cleanCheckout(true),
                                new VcsCheckoutTask()
                                    .description("Fetch Transerv DLL")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-transerv"))
                                            .path(".\\in-ticketing-transerv"))
                                    .cleanCheckout(true))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))),
                new Stage("Build Dependencies Stage 1")
                    .jobs(new Job("Build Common Library",
                            new BambooKey("ISDLLS"))
                            .description("Fetch and Build Common Library")
                            .artifacts(new Artifact()
                                    .name("CommonLibrary")
                                    .copyPattern("BookMyShow.CommonLibrary.dll")
                                    .location("in-ticketing-commonlibrary/bin/Release")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch Common Library Source")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-commonlibrary"))
                                            .path(".\\in-ticketing-commonlibrary")),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "CommonLibrary")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build Common Library")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile(".\\in-ticketing-commonlibrary\\CommonLibrary.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-commonlibrary/CommonReferences"))),
                new Stage("Build Dependencies Stage 2")
                    .jobs(new Job("Build CommonLibrary.Queue",
                            new BambooKey("BDS2"))
                            .artifacts(new Artifact()
                                    .name("CommonLibrary.Queue")
                                    .copyPattern("BookMyShow.CommonLibrary.Queue.dll")
                                    .location("in-ticketing-rmq/bin/Release")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch  CommonLibrary.Queue Source")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-rmq"))
                                            .path(".\\in-ticketing-rmq")),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "CommonLibrary-Queue")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build CommonLibrary.Queue")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile(".\\in-ticketing-rmq\\BookMyShow.CommonLibrary.Queue.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-rmq/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary")
                                    .destination("in-ticketing-rmq/CommonReferences")),
                        new Job("Build Common Objects",
                            new BambooKey("BCO"))
                            .artifacts(new Artifact()
                                    .name("CommonObjects")
                                    .copyPattern("BookMyShow.CommonObjects.dll")
                                    .location("in-ticketing-customer-mgmt/bin/Release")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch  CommonObjects Source")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-customer-mgmt"))
                                            .path(".\\in-ticketing-customer-mgmt")),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "CommonObjects")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build CommonObjects")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile(".\\in-ticketing-customer-mgmt\\CommonObjects.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-customer-mgmt/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary")
                                    .destination("in-ticketing-customer-mgmt/CommonReferences"))),
                new Stage("Build Dependencies Stage 3")
                    .jobs(new Job("Build PG DataSync",
                            new BambooKey("BPD"))
                            .artifacts(new Artifact()
                                    .name("PGDataSync")
                                    .copyPattern("BookMyShow.PG.DataSynchronization.dll")
                                    .location("in-ticketing-pg-dataSync/BookMyShow.PG.DataSynchronization/bin/Release")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Checkout PG DataSync Repository")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-pg-dataSync"))
                                            .path("./in-ticketing-pg-dataSync"))
                                    .cleanCheckout(true),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "PG-DataSync")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build PGDataSync")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile("./in-ticketing-pg-dataSync/BookMyShow.PG.DataSynchronization/BookMyShow.PG.DataSynchronization.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-pg-dataSync/BookMyShow.PG.DataSynchronization/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary")
                                    .destination("in-ticketing-pg-dataSync/BookMyShow.PG.DataSynchronization/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary.Queue")
                                    .destination("in-ticketing-pg-dataSync/BookMyShow.PG.DataSynchronization/CommonReferences")),
                        new Job("Build Masters",
                            new BambooKey("BM"))
                            .artifacts(new Artifact()
                                    .name("BookMyShow.Masters")
                                    .copyPattern("BookMyShow.Masters.dll")
                                    .location("in-ticketing-bms-masters/BookMyShow.Masters/bin/Release")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch  Masters Source")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-bms-masters"))
                                            .path(".\\in-ticketing-bms-masters"))
                                    .cleanCheckout(true),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "BookMyShow.Masters")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build Masters")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile(".\\in-ticketing-bms-masters\\BookMyShow.Masters\\BookMyShow.Masters.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-bms-masters/BookMyShow.Masters/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary")
                                    .destination("in-ticketing-bms-masters/BookMyShow.Masters/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary.Queue")
                                    .destination("in-ticketing-bms-masters/BookMyShow.Masters/CommonReferences"))),
                new Stage("Build Dependencies Stage 4")
                    .jobs(new Job("Build DBMigration",
                            new BambooKey("BD"))
                            .artifacts(new Artifact()
                                    .name("BookMyShow.DBMigration")
                                    .copyPattern("BookMyShow.DBMigration.dll")
                                    .location("in-ticketing-dbmigration/BookMyShow.DBMigration/bin/Release")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch DBM Source")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-dbmigration"))
                                            .path(".\\in-ticketing-dbmigration")),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "DBMigration")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build DBM")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile(".\\in-ticketing-dbmigration\\BookMyShow.DBMigration\\BookMyShow.DBMigration.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-dbmigration/BookMyShow.DBMigration/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary")
                                    .destination("in-ticketing-dbmigration/BookMyShow.DBMigration/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonObjects")
                                    .destination("in-ticketing-dbmigration/BookMyShow.DBMigration/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary.Queue")
                                    .destination("in-ticketing-dbmigration/BookMyShow.DBMigration/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BookMyShow.Masters")
                                    .destination("in-ticketing-dbmigration/BookMyShow.DBMigration/CommonReferences"))),
                new Stage("Build Dependencies Stage 5")
                    .jobs(new Job("Build PaymentGatewaysNOSQL",
                            new BambooKey("BP"))
                            .artifacts(new Artifact()
                                    .name("PGNOSQL")
                                    .copyPattern("BookMyShow.PaymentGateways.NOSQL.dll")
                                    .location("in-ticketing-pg-nosql/BookMyShow.PaymentGateways.NOSQL/BookMyShow.PaymentGateways.NOSQL/bin/Release")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch PGNOSQL Source")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-pg-nosql"))
                                            .path(".\\in-ticketing-pg-nosql")),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "PG-NoSQL")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build PGNOSQL")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile(".\\in-ticketing-pg-nosql\\BookMyShow.PaymentGateways.NOSQL\\BookMyShow.PaymentGateways.NOSQL\\BookMyShow.PaymentGateways.NOSQL.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-pg-nosql/BookMyShow.PaymentGateways.NOSQL/BookMyShow.PaymentGateways.NOSQL/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary")
                                    .destination("in-ticketing-pg-nosql/BookMyShow.PaymentGateways.NOSQL/BookMyShow.PaymentGateways.NOSQL/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BookMyShow.Masters")
                                    .destination("in-ticketing-pg-nosql/BookMyShow.PaymentGateways.NOSQL/BookMyShow.PaymentGateways.NOSQL/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BookMyShow.DBMigration")
                                    .destination("in-ticketing-pg-nosql/BookMyShow.PaymentGateways.NOSQL/BookMyShow.PaymentGateways.NOSQL/CommonReferences"))),
                new Stage("Build Dependencies Stage 6")
                    .jobs(new Job("Build BGiftVouchers",
                            new BambooKey("BGV"))
                            .artifacts(new Artifact()
                                    .name("BGiftVoucher")
                                    .copyPattern("Bigtree.GiftVoucher.dll")
                                    .location("in-ticketing-pg-gv/GVProcessor/bin/Release")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch BGV Source")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-pg-gv"))
                                            .path(".\\in-ticketing-pg-gv")),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "BGiftVouchers")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build BGV")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile(".\\in-ticketing-pg-gv\\GVProcessor\\GVProcessor.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-pg-gv/GVProcessor/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary")
                                    .destination("in-ticketing-pg-gv/GVProcessor/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("PGDataSync")
                                    .destination("in-ticketing-pg-gv/GVProcessor/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BookMyShow.Masters")
                                    .destination("in-ticketing-pg-gv/GVProcessor/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("PGNOSQL")
                                    .destination("in-ticketing-pg-gv/GVProcessor/CommonReferences"))),
                new Stage("Build Dependencies Stage 7")
                    .jobs(new Job("Build Payment Gateways",
                            new BambooKey("BPG"))
                            .artifacts(new Artifact()
                                    .name("PaymentGateways")
                                    .copyPattern("BookMyShow.PaymentGateways.dll")
                                    .location("in-ticketing-pg/bin/Release")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch PaymentGateways Source")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-pg"))
                                            .path(".\\in-ticketing-pg")),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "PaymentGateways")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build  PaymentGateways")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile(".\\in-ticketing-pg\\PaymentGateways.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-pg/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("Transerv DLL")
                                    .destination("in-ticketing-pg/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary")
                                    .destination("in-ticketing-pg/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonObjects")
                                    .destination("in-ticketing-pg/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary.Queue")
                                    .destination("in-ticketing-pg/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BookMyShow.Masters")
                                    .destination("in-ticketing-pg/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BookMyShow.DBMigration")
                                    .destination("in-ticketing-pg/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("PGNOSQL")
                                    .destination("in-ticketing-pg/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BGiftVoucher")
                                    .destination("in-ticketing-pg/CommonReferences"))),
                new Stage("Build RuleEngine")
                    .jobs(new Job("Build RuleEngine",
                            new BambooKey("BUILDRULEENGINE"))
                            .artifacts(new Artifact()
                                    .name("RuleEngine")
                                    .copyPattern("RuleEngine.dll")
                                    .location("in-ticketing-pg-ruleengine/bin/Release")
                                    .shared(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch RuleEngine Source")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-ticketing-pg-ruleengine"))
                                            .path(".\\in-ticketing-pg-ruleengine")),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("incrementalNoPullRequest", "incrementalModeFailBuildField")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "PaymentGateways")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build PaymentGateways")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile(".\\in-ticketing-pg-ruleengine\\RuleEngine.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("incrementalNoPullRequest", "incrementalModeFailBuildField")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-pg-ruleengine/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("Transerv DLL")
                                    .destination("in-ticketing-pg-ruleengine/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary")
                                    .destination("in-ticketing-pg-ruleengine/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonObjects")
                                    .destination("in-ticketing-pg-ruleengine/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary.Queue")
                                    .destination("in-ticketing-pg-ruleengine/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BookMyShow.Masters")
                                    .destination("in-ticketing-pg-ruleengine/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BookMyShow.DBMigration")
                                    .destination("in-ticketing-pg-ruleengine/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("PGNOSQL")
                                    .destination("in-ticketing-pg-ruleengine/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BGiftVoucher")
                                    .destination("in-ticketing-pg-ruleengine/CommonReferences"))),
                new Stage("Build Job")
                    .jobs(new Job("Build Job",
                            new BambooKey("ISTEST"))
                            .artifacts(new Artifact()
                                    .name("Deployment Files")
                                    .copyPattern("*.*")
                                    .location("in-ticketing-pg-refund/bin/Release")
                                    .shared(true)
                                    .required(true))
                            .tasks(new VcsCheckoutTask()
                                    .description("Fetch  Source Code")
                                    .checkoutItems(new CheckoutItem()
                                            .repository(new VcsRepositoryIdentifier()
                                                    .name("in-pg-queueprocess-refund-job"))
                                            .path(".\\in-ticketing-pg-refund"))
                                    .cleanCheckout(true),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildbegintask"))
                                    .description("Sonar Scanner - Begin Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "_")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "incrementalModeRunFullAnalysis")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "QProcess")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()),
                                new MsBuildTask()
                                    .description("Build and Publish IS using dependencies.")
                                    .executable("MSBuild v14.0 (64bit)")
                                    .projectFile(".\\in-ticketing-pg-refund\\QProcessRefundService.csproj")
                                    .options("/p:Configuration=Release"),
                                new AnyTask(new AtlassianModule("ch.mibex.bamboo.sonar4bamboo:sonar4bamboo.msbuildendtask"))
                                    .description("Sonar Scanner - End Analysis")
                                    .configuration(new MapBuilder()
                                            .put("incrementalFileForInclusionList", "")
                                            .put("chosenSonarConfigId", "1")
                                            .put("useGradleWrapper", "")
                                            .put("useNewGradleSonarQubePlugin", "")
                                            .put("sonarJavaSource", "")
                                            .put("sonarProjectName", "")
                                            .put("buildJdk", "")
                                            .put("gradleWrapperLocation", "")
                                            .put("sonarLanguage", "")
                                            .put("sonarSources", "")
                                            .put("useGlobalSonarServerConfig", "true")
                                            .put("incrementalMode", "")
                                            .put("failBuildForBrokenQualityGates", "true")
                                            .put("sonarTests", "")
                                            .put("incrementalNoPullRequest", "incrementalModeFailBuildField")
                                            .put("failBuildForSonarErrors", "")
                                            .put("sonarProjectVersion", "")
                                            .put("sonarBranch", "")
                                            .put("executable", "Sonar MSBuild")
                                            .put("illegalBranchCharsReplacement", "")
                                            .put("failBuildForTaskErrors", "true")
                                            .put("incrementalModeNotPossible", "")
                                            .put("sonarJavaTarget", "")
                                            .put("environmentVariables", "")
                                            .put("incrementalModeGitBranchPattern", "")
                                            .put("legacyBranching", "")
                                            .put("replaceSpecialBranchChars", "")
                                            .put("additionalProperties", "")
                                            .put("autoBranch", "")
                                            .put("sonarProjectKey", "")
                                            .put("incrementalModeBambooUser", "")
                                            .put("overrideSonarBuildConfig", "")
                                            .put("workingSubDirectory", "")
                                            .build()))
                            .requirements(new Requirement("DC")
                                    .matchValue("NMV")
                                    .matchType(Requirement.MatchType.EQUALS),
                                new Requirement("OS")
                                    .matchValue("Windows")
                                    .matchType(Requirement.MatchType.EQUALS))
                            .artifactSubscriptions(new ArtifactSubscription()
                                    .artifact("RuleEngine")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("TP DLL(s)")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("Transerv DLL")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonObjects")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("CommonLibrary.Queue")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("PGDataSync")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BookMyShow.Masters")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BookMyShow.DBMigration")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("PGNOSQL")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("BGiftVoucher")
                                    .destination("in-ticketing-pg-refund/CommonReferences"),
                                new ArtifactSubscription()
                                    .artifact("PaymentGateways")
                                    .destination("in-ticketing-pg-refund/CommonReferences"))))
            .linkedRepositories("in-pg-queueprocess-refund-job",
                "in-ticketing-commonlibrary",
                "in-ticketing-rmq",
                "in-ticketing-bms-masters",
                "in-ticketing-dbmigration",
                "in-ticketing-pg-nosql",
                "in-ticketing-customer-mgmt",
                "in-ticketing-TP-dlls",
                "in-ticketing-pg",
                "in-ticketing-pg-gv",
                "in-ticketing-transerv",
                "in-ticketing-pg-dataSync",
                "in-ticketing-pg-ruleengine")
            
            .variables(new Variable("DC",
                    "NMV"))
            .planBranchManagement(new PlanBranchManagement()
                    .delete(new BranchCleanup())
                    .notificationForCommitters())
            .notifications(new Notification()
                    .type(new PlanCompletedNotification())
                    .recipients(new CommittersRecipient()));
        return plan;
    }
    
    public PlanPermissions planPermission() {
        final PlanPermissions planPermission = new PlanPermissions(new PlanIdentifier("NMVPG", "INPGRR"))
            .permissions(new Permissions()
                    .userPermissions("ritesh.siotiya", PermissionType.VIEW, PermissionType.BUILD)
                    .userPermissions("shubham.ranjan", PermissionType.EDIT, PermissionType.BUILD, PermissionType.CLONE, PermissionType.VIEW, PermissionType.ADMIN)
                    .groupPermissions("Release Team", PermissionType.VIEW, PermissionType.BUILD)
                    .loggedInUserPermissions(PermissionType.VIEW));
        return planPermission;
    }
    
    public static void main(String... argv) {
        //By default credentials are read from the '.credentials' file.
        BambooServer bambooServer = new BambooServer("https://bamboo.bms.bz");
        final PlanSpec planSpec = new PlanSpec();
        
        final Plan plan = planSpec.plan();
        bambooServer.publish(plan);
        
        final PlanPermissions planPermission = planSpec.planPermission();
        bambooServer.publish(planPermission);
    }
}